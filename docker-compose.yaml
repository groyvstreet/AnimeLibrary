version: '3.3'

services:

  db:
    container_name: database
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev

  redis:
    container_name: redis
    image: "redis:alpine"
    volumes:
      - redis_data:/data
    env_file:
      - ./.env.dev

  backend:
    container_name: backend
    build: ./
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .//:/animelibrary/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis

  celery:
    container_name: celery
    build: ./
    command: celery -A animelibrary worker -l info
    volumes:
      - ./backend/:/usr/src/backend/
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis

  frontend:
    container_name: frontend
    build: ./frontend
    command: npm start
    volumes:
      - './frontend:/frontend'
      - '/frontend/node_modules'
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  redis_data:
  postgres_data:
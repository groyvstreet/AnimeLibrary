version: '3.3'

services:

  db:
    container_name: postgresql
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev

  redis:
    container_name: redis_
    image: "redis:alpine"
    env_file:
      - ./.env.dev

  backend:
    container_name: catalog
    build: ./
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .//:/animelibrary/
    ports:
      - 8000:8000
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
#    env_file:
#      - ./.env.dev
    depends_on:
      - db
      - redis

  celery:
    container_name: celery_
    build: .
    command: celery -A animelibrary worker -l info
    volumes:
      - .:/usr/src/catalog
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
#    env_file:
#      - ./.env.dev
    depends_on:
      - backend
      - redis

  frontend:
    container_name: react
    build: ./frontend
    command: npm start
    volumes:
      - './frontend:/frontend'
      - '/frontend/node_modules'
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  postgres_data: